#
# Copyright (c) 2024 Elide Technologies, Inc.
#
# Licensed under the MIT license (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# https://opensource.org/license/mit/
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under the License.
#

name: Build

"on":
  workflow_dispatch:
    inputs:
      ## Input: Enable Release Targets
      release:
        description: "Release"
        type: boolean
        default: false

      ## Input: Publish Libraries
      publish:
        description: "Publish"
        type: boolean
        default: false

      ## Input: Enable Provenance
      provenance:
        description: "Provenance"
        type: boolean
        default: true

      ## Input: Runner
      runner:
        description: "Runner"
        type: string
        default: ubuntu-latest

  workflow_call:
    inputs:
      release:
        description: "Release"
        type: boolean
        default: false
      publish:
        description: "Publish"
        type: boolean
        default: false
      provenance:
        description: "Provenance"
        type: boolean
        default: true
      runner:
        description: "Runner to use"
        type: string
        default: ubuntu-latest

    secrets:
      BUILDLESS_APIKEY:
        required: false
        description: "Buildless API Key"
      CODECOV_TOKEN:
        required: false
        description: "Codecov token"

env:
  BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}

permissions:
  contents: read

jobs:
  ##
  ## Job: Build
  ##
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [Ubuntu]
        mode: ["Strict"]
        machine:
          - ${{ inputs.runner }}

    name: "Build (${{ matrix.os }})"
    runs-on: ${{ matrix.machine }}
    continue-on-error: ${{ matrix.mode != 'Strict' }}

    permissions:
      contents: "write"
      actions: "read"
      id-token: "write"
      checks: "write"
      pull-requests: "write"
      packages: "read"
      security-events: "write"

    defaults:
      run:
        shell: bash

    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}

    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@f086349bfa2bd1361f7909c78558e816508cdc10 # v2.8.0
        with:
          disable-sudo: true
          egress-policy: audit
          # allowed-endpoints: []
      - name: "Setup: Checkout"
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          submodules: false
          persist-credentials: false
      - name: "Setup: Bun"
        uses: oven-sh/setup-bun@f4d14e03ff726c06358e5557344e1da148b56cf7 # v1.2.2
        with:
          bun-version: latest
      - name: "Setup: Install Dependencies"
        run: bun install --frozen
      - name: "Build: Library"
        run: bun run build && pushd dist && tar -czvf ../hakuna.tgz ./* && popd
      - name: "Artifact: Build Outputs"
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: hakuna-lib
          path: |
            hakuna.tgz
            dist/**/*.*
      - name: "Artifact: Provenance Subject"
        id: hash
        if: ${{ matrix.os == 'ubuntu' && inputs.provenance }}
        run: |
          file ./hakuna.tgz
          du -h ./hakuna.tgz
          HASHES=$(sha256sum ./hakuna.tgz | base64 -w0)
          echo "hashes = $HASHES"
          echo "hashes=$HASHES" >> "$GITHUB_OUTPUT"

  ## Report: Provenance
  provenance:
    name: Provenance
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    if: inputs.provenance
    needs: [build]
    permissions:
      actions: "read"
      id-token: "write"
      contents: "write"
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      upload-assets: ${{ github.ref == 'refs/heads/stable' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'release/') || startsWith(github.ref, 'refs/tags/v') }}
